public class Solution {
    public long numTrees(int n) {
        long [] a = new long[n];
        int half, sum = 0;
        boolean odd = false;
        
        if(n==0) return 1;
        if(n==1) return 1;
        if(n==2) return 2;
        
        a[0] = 1;
        a[1] = 2;
        for(int i = 2; i < n; i++){
            odd = ((i + 1) % 2 == 1) ? true : false;
            half = (i + 1) / 2;
             
            for(int j = 0; j < half; j++){
                if(j== 0 || j == 1){
                    sum += a[i - j - 1];
                }
                else{
                    sum += (a[i - j - 1] * a[j - 1]);
                }
            }
            
            sum *= 2;
            if(odd) { sum += (a[i - half - 1] * a[half - 1]); }
            a[i] = sum;
            sum = 0;
        }
        
        return a[n - 1];
    }
}