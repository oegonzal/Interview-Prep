public class Solution {
    /**
     * @param m: An integer m denotes the size of a backpack
     * @param A & V: Given n items with size A[i] and value V[i]
     * @return: The maximum value
     */
    public int backPackII(int bpsize, int[] sizes, int[] vals) {
        int[] A = new int[bpsize+1];
        
        for(int i = 0; i < sizes.length; i++){
            for(int j = A.length-1; j >= sizes[i]; j--){
                if(A[j] < A[j - sizes[i]] + vals[i]) A[j] = A[j - sizes[i]] + vals[i];
            }
        }
        
        return A[bpsize];
    }
}

/*
    1. Check if bag has space. If no get max val of adjacent elmts.
    2. Go to spot where that space is and gets its saved maximum value
    3. Add that to current val and save to position

*/