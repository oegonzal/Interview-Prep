//Second Try:
Total Runtime: 2113 ms
100% test cases passed.


/**
 * Definition for ListNode
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param ListNode head is the head of the linked list
     * @return: ListNode head of linked list
     */
    public static ListNode deleteDuplicates(ListNode head) { 
        ListNode curr = head, prev = head;
        while(curr != null && curr.next != null){
            prev = curr;
            curr = curr.next;
            
            while(curr != null && prev.val == curr.val){
                prev.next = curr.next;
                curr = curr.next;
            }
        }
        return head;
    }  
}

//-14->-14->-13->-13->-13->-13->-12->-12->-11->-10->-9->-9->-9->-9->-9->-9->-9->-9->-8->-8->-8->-7->-7->-7->-4->-4->-4->-4->-2->-1->-1->-1->-1->-1->-1->0->0->1->1->2->2->2->2->2->3->3->4->5->5->5->5->5->5->6->6->6->7->7->7->7->7->8->8->9->9->10->10->10->10->11->11->12->13->14->14->14->15->15->15->16->17->17->17->17->17->17->18->18->19->19->19->20->20->20->20->20->21->22->22->23->23->23->23->24->25->25->25->25->25->null



//First Try: (Wrong Answer)
Total Runtime: 532 ms
41% test cases passed.


/**
 * Definition for ListNode
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param ListNode head is the head of the linked list
     * @return: ListNode head of linked list
     */
    public static ListNode deleteDuplicates(ListNode head) { 
        ListNode curr = head, prev = head;
        while(curr != null && curr.next != null){
            prev = curr;
            curr = curr.next;
            
            if(prev.val == curr.val){
                prev.next = curr.next;
                curr = curr.next;
            }
        }
        return head;
    }  
}