Queue (Take short actionable steps on these ASAP SOONER THE BETTER):

- Fix car... & research court shit
- CAR + ADDERREL + STD + JuryDuty + Sleep Routine

- Work travel expenses => $180 + $82 + $25 + $25 + $30 ~ $342
- $400 IRS extra charge
- Cancel subscriptions on work laptop
- Make job application plan
- W2 form for wwork

- JuryDuty
- Rate lock again
- Get FINANCE BOOK BACK** TO STUDY USE CASES FROM ERNEST CHAN & OLD NOTES
- STD
- Train ML hard and apply asap for job (in 3 months): Make resume
    - In finance ideally
    - concurrently w/ current
    - Until I get used to ML one and can then trade other for FAANG
    - Then get used to it & again trade other for top SupplySide trading job w/ commission
- Get adderell
- Work setup env in other account before wipeout
- Get more jobs => priority switch to save/no-gamble/realestate
- Car insurance
- home (im getting tired living here)
- Covid shot
- Contacts  - new glasses (VISION)
- Mom citizenship test
- Parents health
- PRINT LINEAR ALGEBRA REFERENCE REVIEW GUIDE (REALLY GOOD) https://cs229.stanford.edu/section/cs229-linalg.pdf + book refs
- Ed communicate & make plan
- Sleep early & wake early to minimize watching tv at night
- MASTER COMPUTATIONAL IRL & CONTROL THEORY W/ TIME SERIES** + OPTIMZATION + ALGORITHMS => MY MAIN & ONLY HOBBY OTHER THAN REALESTATE+DANCING+TRAVEL

================================================================================================
Tangibles by age 30 to work non-stop:

- Train mind to grind/focus => give up short term val => do it right this time => trophy-wife later & chill
- 2nd Job + TS + Visa/Glassdoor ML + w/ minimization of each => Art of negotiation & System Design
- Mastering FinMath + 2 main books + Kaggle + LT consistently => Setup model => Prop, technique & prob-solvng mastering
- 5 Houses => Safe plan & fam
- Wiggle into big tech/finance => Just for rep & bigger gigs later
- Adderrell => Maximize
- Fitness + Dance techniques => Attracting + Prepping for later & not starting from scratch
- No gambling w/o robust & guaranteed return (My biggest lesson)
- Grind => Strategic job hops (concurrency for higher income + quality of comp for reputation => consultancy)

Time-Skill-Risk Optimization:
- Exploit network & current skills
- Exploit current knowledge discovery -> finish mastering coding examples on LC, Finance books, & skills



================================================================================================
MASTER:
- TIME-SERIES + LATEST TECHNIQUES FOR OPTIMAL CONTROL + IMITATION LEARNING IN TIME SERIES
- FINANCIAL MATHEMATICS + MODELING (DIFFERENTIALS + STATISTICS/STOCHASTICS)
- ENGINEERING + NEGOTIATION + GRINDING + LEETCODE/SYSTEM-DESIGN
- REALESTATE
- DANCE + TRAVEL

Read accomplished authors/researchers in IRL Finance space:
- https://www.researchgate.net/publication/352459754_An_Overview_of_Inverse_Reinforcement_Learning_Techniques
- https://www.iit.edu/directory/people/matthew-dixon
- https://www.ri.cmu.edu/pub_files/2013/2/ziebart2013maximum.pdf
================================================================================================

CONCRETE 2022 GOAL:
- Finish Real-analysis + Measure theory vids + discrete section by Sun Night
- Finish MLF & Financial Mathematics
- Kaggle Finance set expert
- 300 Leetcode Hard probs mastered (+Python)
- Rx + SystemDesign Expert
- Plan to live in NYC from mid 2023 -> end 2024 (election time @ Bernard or similar + building infra/relations)


Truth to swallow:
- Grow up, know whens it time to call it quits, and admit a big L & losses when you have to & to be patient


Trading hours internationally:
- https://www.ig.com/uk/news-and-trade-ideas/other-news/what-are-the-trading-hours-of-stock-markets-around-the-world--190424

2023:
- Master dance + fin algos
- @ very least get quant job or ML job if not FAANG
- House

TimeSeries Book Website:
- https://faculty.chicagobooth.edu/ruey-s-tsay/research/analysis-of-financial-time-series-3rd-edition

Later:
- Read multiple leetcode probs & take notes just to see which you wanna solve later
- Fix issues from Antara to get ticket through => no delays on this...
- Ebay issue tell THEM to fix it
- Feedback on Tuesday call
- Frequence Party handle
- Stochastics => FinSeries => chpt on stochastic calc => MLF => MASTER (MATH, ALGOS, ML, Python, & SD) => JOB
- Master the PCA section








================================================================================================
IMPORTANT:
- To accept you may never reach vision or main goals in the time you want or even in reality
    but what you can do is maintain certain habits:
    - Algo practice
    - No gambling
    - Reading & exploration
    - Practice sets over raw experimentation with no knowledge (first build the connections via exploration)

Weekend Goal:
- To deeply learn different analytical mathematical models in R & R experimentation (code as you read)
- To do labs on the intro book to time-series ML
- To work on leetcode probs => create python technique reference notebook with images
- To continue exploring Kaggle lessons & mastering coding them
    => start collecting unq datasets & applying concepts so its all in 1 place

https://faculty.chicagobooth.edu/ruey-s-tsay/research/analysis-of-financial-time-series-3rd-edition

Statistical Distribution books:
- http://personalpages.to.infn.it/~zaninett/pdf/statistical-distributions.pdf
- https://www.stat.rice.edu/~dobelman/textfiles/DistributionsHandbook.pdf

Last Math Playlist:
- Vector Calc: https://www.youtube.com/watch?v=QtiCZQIwBT8&list=PLMrJAkhIeNNQromC4WswpU1krLOq5Ro6S&index=5
- Measure Theory: https://www.youtube.com/watch?v=q3UgXso-1jw&list=PLBh2i93oe2qvMVqAzsX1Kuv6-4fjazZ8j&index=15
- Multivar Calc: https://www.youtube.com/watch?v=rTTG2s_g_Ks&list=PLBh2i93oe2qv4G2AyarkbR3OKBml0hXEg&index=8
- Diff Equs: https://www.youtube.com/playlist?list=PLMrJAkhIeNNTYaOnVI3QpH7jgULnAmvPA
- Quantopian Lect: https://www.youtube.com/watch?v=W-TlWzwM208&list=PLRFLF1OxMm_UL7WUWM31iynp0jMVf_vLW

================================================================================================
Next:
- Learn to plot (so as to get good understanding of data & potential patterns)**
- Learn to master panda first **
- Learn to clean data so that I may start testing it
- Then learn some basic algos to model

Next:
- Snap out of all other things & obsess on your goals w/ fast progress ====> total focus & control => count days & perfect routing... 592 day today
- Grind on Kaggle none-stop
- Review Leetcode probs
- Finish reading math books + planned vids & apply knowledge
- Get ML Job
- TS side job
- Frequ.
- Setup safe trading system
- Save 
- Buy homes & automate
- CONTRACT JOBS - ML


PLAN:
- Keep mastering tutorial CODING**
- Read skilearn + tensorflow/keras docs
- Follow Timeseries book & skip other theoretical books/readings for now & just go back to them when you need to
    - It is much more important to get coding practice then to do all reading => use book coding examples and transfer to Kaggle
- On MLF book just go to coding exercises & review specific theory parts when necessary
- Goal is SECOND JOB IN ML FINANCE + Own Trading Algo live => Deadline is 07/15/2023 (TODAY: 01/15/2023)

================================================================================================
Consolidated Plan:
- Main is to Master techniques for ML and Algos (Discovery => read and do many notebooks + problem sets)
- Learn math as you go BUT CONSISTENTLY REVIEW MATH PROPS & TOOLS => via books & vids based on what I encounter
- READ BOOKS ON WEEKENDS for discovery OR WHEN YOU BURN OUT FROM DOING PROBS ------ ALSO NO MORE BOOKS: JUST MASTER CURRENT ONES TILL END OF YEAR


Consistency Plan:
- Kaggle daily
- Math review daily
- Algo practice daily
- SD bi-weekly


Goals:
- Learn buy-side quant trader skills & constantly keep checking job desc. => ASAP on this => IMPROVE CONSISTENTLY

- Train Kaggle Daily
    => comment on all lines
    => apply on JaneStreet notebooks
- Train Leetcode Python daily
- Review Calc + Linear Algebera + Stochastics + Stats props + vids


- Finish stochastic book
- Finish comprehensive finance Math book
- Finish MLF
- Finish Financial Time Analysis Book

- Transfer little by little application to QuantConnect


Kaggle:
- Fluidly master all trainging notebooks techniques**
- Practice Pandas & numpy & skilearn
- Experiment & apply on finance sets + all book knowledge as well => look or application in libs coming from book knowledge (get curious)

NOTE:
- Will be a long process with lots of time required. But with more iteration & elimination of less value & high focus on high value
    the faster it'll get done (Expect this to take a whole year just to get OK => you are on right track however) => Learn fast!

GOAL:
- Learn ML asap (obsess with it) => FAST THEN => get second job
- SETUP TRADING SYSTEM FAST
- SKILLS:
    - Reinfocement Learning + Dynamic Programming + Optimization
    - Data science + Deep learning
    - Mathematical problem solving in Finance + Algorithms
    - System Design for Profitable Trading Systems based on patterns


Today:
- Finish current chapter on stochastics
- Train time series on Kaggle
- Review Real analysis (to understand calc better)

================================================================================================

Side notes:
- Review derivative/integral differentiation & limits in real analysis
- also geometric and sequences

PLAN:
- Habits: 
    - Pushup/hand-stands/dance
    - Read finance & math DAILY
    - Negotiate/Delegate/Charisma
    - Save/pat-debt/minimize-risk
    - Remote/travel/network/assets
    - Quickest way => network to correct position & learn as you go (instead of guessing how to prep to get there - meantime just get curious I guess)

- Buy-side Quant Trader
    - Applied Empirical Mathematics: ML, Statistics, & probability
    - Algorithms & computer science
    - Python / C++
    - Problem solving & analytical skills
    - High salaries + bonuses correlated w/ performance
- Learn:
    - MLF finance book
    - Mathematics up to the point you have now but no more (comprehensive book on finance)
    - Linear/differential-calc/statistics/probability/logic
    - Old quantopian videos
    - Machine Learning + Statistics (statistical significance) + Probability testing + Econemetric Models + Optimization
    - https://www.qmr.ai/buy-side-vs-sell-side-quants-all-their-differences/
    - https://www.qmr.ai/mathematics-required-for-algotrading/
    - https://www.qmr.ai/is-algorithmic-trading-worth-it/#Conclusion
    - https://algorithmsbook.com/optimization/files/optimization.pdf

- Linear Plan:
    - Daily quick review of ML concepts + Algo techniques + Python (since this base is VERY important)
    - Stick to Math plan
        - Logic + Mathematical notation & thinking
        - Real Analysis
        - Measure Theory
        - Stochastic Processes & Probability Theory
        - Linear Algebra
        - Differential Calc
        - Ito Calc & concepts
        - MLF
        - Econometrics / Empirical & Interential Stats
        - Reinforcement Learning + Dynamic Programming + Optimization
    - Full power on Machine Learning based on knowledge from finance books
    - Algo & Logic flow practice everyday
    - System Design every so often


By Jan 01 => I should have my readings down
Feb 01 => Aug 01 ( 6 months => master ML + Algos + SD->AWS)

Measure Theory:
- 5 hrs
Linear Algebra:
- 4 hours, 23 minutes
- https://cs229.stanford.edu/section/cs229-linalg.pdf
Multi-variable Calc:
- 2 hours, 47 minutes
- https://www.math.toronto.edu/selick/B44.pdf
- http://www.math.umbc.edu/~jbell/pde_notes/A_Some%20Review%20of%20Ordinary%20Differential%20Equations.pdf
(Today)


Vector Calculus and Partial Differential Equations (Steve Brunton):
- 7 hours
(Tomorrow: Friday + Review previous stuff)

~~[ ALL ] 16 hrs => finish by weekend

=> Stochastic Book
=> Fin book: finish next week
=> MLF: finish the last week

Differential Equations and Dynamical Systems (Steve Brunton):
- 22 hours
Reinforcement Learning:
- 3 hours, 11 minutes
Lagrance Multiplier:
- 13 mins ( https://www.youtube.com/watch?v=5A39Ht9Wcu0 )
Quantopian Lecture Series:
- 12 hours
Finance Book
MLF

LeetCode
Kaggle
QuantConnect
Google ML
Supply-Side Quant Trader
Comprehensive Finance Book

Extra (Steve Brunton):
Intro to DataScience:
- 2 hours, 40 minutes
Singular Value Decomposition
- 5 hours, 25 minutes
Dynamic Systems w/ Machine Learning
- 9 hours, 4 minutes
Sparsity & Compression
- 4 hours, 59 minutes
Data Driven Control w/ Machine Learning:
- 7 hours, 50 minutes
Andrew Ng - Deep learning coursera course


================================================================================================



Plan:
- Leave good impression (YesKz & cuzns & Joaqu. + uncles)
- Get house
- Master skills / Patience => goal is to lower risk, minimize self damage, & free urself up in 30s for relationship + fam
- Get faang (high salary job to afford self & parents)

Short term:

- Palm springs
- Angs presents
- Angs disney
- Learn Banda dance moves

- Six-flags
- Big bear
- Mexico ( Travel partners + room )





PLAN:
- Sleep early
- Minimize distractions for 2 yrs (friends/relatives/work/drugs/media)
- Maximize problem/project exposure w/ light experimentation BUT NOT INTENSE EFFORT => TIMEWASTE => TIME NOT GOING TO WHERE SHOULD
    => Instead get really good at bookmarking & practice recall **
- Master tools that bring most benefit => Rx/Pandas/ML/AWS/Javascript/Python4/d3/SD/Algos/Math/ProblemSolving-Logic*
- Finish Kaggle reviews + focus on pandas recipies to master + sklearn recipies to master => then move to projects & try to inc prediction
- Deeply read MLF / Comprehensive Finance book w/ Handbooks of Mathematics as guide & Intro to Algos / HighFrequencyAlgo / Algorithmic Trading
    => convert ideas to algos ( but first master algos & ml research + book theory )
- ALGO: explore new => design proof w/ math/notation/writign => study best solution  => review older probs by implementing (including this later)
- PLAN: Deleverage position in AFRM (too leveraged => better to be leveraged during more certain times)


Strategy:
- Finance Practice sets => Master them
    - Practice Pandas + Timeseries + Factor/PCA analysis on data for Finance sets
    - Keep reading Finance book & start one after & complete by EOY (FinBook, MLF, & SD)
    - Finish 300 algo hard probs + reviewed & mastered
    - Minimize & stall work => keep prob interesting on performance & scheduling
    - Reactive Extensions Python + Master python algos to create real online algos
    - Study QuantConnect Strategies & get simplification ideas + backtest
- Finance book
- Algos explore & solutions
- Start rereading MLF and focus strongly on concepts in it in your ML + Algo + Math learnings
- Do labs first before serious MLF read
- While working on ML-Research mastering for factors + Algo & System Design master => Allocate time for financial 
    mathematics to begin brainstorming a system
- Skills Math + Visualization + Experimentation + Logic + Reactive Architecture + Aggregatation/SlidingWindow Quantifiers
- Minimize work & just master rxjs, bullshitting, delegating, & isolation


Goal (45 days until 2023):
- Keep minimizing distractions
- Keep practicing: SD+Algos+ML      =>  Achieve mastery of algos/AWS/Research
- Read Finance books Again => all 3 & revew math handbook if get stuck
- Kaggle & Quant ** => setup pipelines & patterns
- Skills: sklearn/pandas/python-libs, flask, AWS, d3, rxjs, Finance: algos/DS/ML
- Great mastery of quant research + kaggle + Python & basic AWS setup for project (rxjs/d3 mastery) => get backend python mastery/system-des
- https://www.quora.com/What-are-some-quality-online-Quant-communities
- Realestate/Family + Math/FinancialPatterns + Travel/Dorm/BallroomLessons + MinimizeRest
- Read DiscreteMathematics / LinearAlgebra / NumericalOptimization
- Kaggle 300 Hard done by EOY + Amazing revieww    |   Kaggle trained&quick   |   QuantExperimentation+Books
- Slut around next 10 yrs | Make your money | Take care of Fam | Get married at 38 w/ 24ish

Simple Plan:
- ML + Algos + QuantResearch every day + SD infra => before 30 & elections**
- Continue Remote for FAANG ( top system design THEN top Reinforcement Learning until < 31)
- Buy few houses (first for parents) then partner with Jose + Side money
- Full out on Mathematics / Quant research+Algos ( By next election )
- Learn ppl + young pleasures / SharedEasy
- By < 31 retire & full out on investments/travel/infra


State:
- Optimize mom time for prep (Perfect what I've done => AlgoExpert/LeetCode/Educative/Books/Projects/Presentation Now** + save money)
- Build up for securing home fam
- Consulting + FAANG for surviving later & optimz fun/travel (SharedEasy/Nomad) => Growth individually + be better than normies => plan nxt phase
- Study Math/Quant allday everyday & finish quant infra before election (AMZN SystemDesign + GOOG Reinforcement Learning)
- Retire & all in on plans
- OR => SuperPrep + Minimize Freq + ProfitableInfra => FAANG ML/RF (Rep) => HedgeFundRemote => Retire & fully concentrate on personal project
     => Master Financial Math (Brownian Motion, Blacksholes, Martingales, DeepLearning, Reinforcement Learning, Algos, SystemDesign, Reactivity)

By Sunday:
- Finish reading system design book
- Finish AWS A-Z
- Finish dynamic programming by friday
- Review Medium top patterns & keep practicing + zoning on them in leetcode
    + review old w/ related probs & articles
- Start heavily system designing my projects w/ Figma for practice
- Study python3 helper function api
- Create zone-in plan to interview soon
- House shop => start prep (401k + mom-loan + sis-leaon-maybe + 401k + sign-in bonus)



GOAL EVERYDAY:
- Algo plan by Next election Nov 7th 2024 then Biz w/ cuties
- Quant / Kaggle / Mathematics => Super good @ finance/investments
- FAANG + Realestate while remote (Euro/SouthAmerica) & traveling then MIT dropout


LIFE-PLAN:
- All in on my vision ( Minimize risk & maximize decisin making potential. Get freedom asap & be opportunistic based data-first)
- Burn out your slut phase & Marry much younger to let it out & be stable emotionally 
- Set yourself up financially before getting married

---------------------------------------------------------------------------------------------------------
https://www.quora.com/What-are-some-quality-online-Quant-communities

Keplerian Finance - exploring the boundaries of quantitative finance
Intelligent Trading
Abnormal Returns
Adaptive Trader
Automated Trading System by Jez Liberty
Quantitative Trading
CSSA
Intelligent Trading
Following the Trend
Reading the Markets
Portfolio Probe
AllAboutAlpha: Alternative Investing Trends and Analysis
http://qusma.com
Order matching algorithms
Fama French Forum
FOSS Trading
Quants Portal
mathbabe
Quantivity
Quantitative Finance
rbresearch
The Mathematical Investor
Physics Perspective
The Quant Guy
The R Trader
The Mathematical Investor
Thinking in systems
Quantocracy
Tao
Timely Portfolio
Tr8dr
TRADING THE ODDS
Six Figure Investing
QuantStrat TradeR
Price Action Lab Blog
My Simple Quant
Volatility Made Simple
VIX and More
Wilmott - Serving The Quantitative Finance Community
Meb Faber Research
Quantivity
Systematic Investor
Signal Plot - Algorithmic trading, quantitative finance, and machine learning
Turing Finance, where computer science meets finance!
Robot Wealth
Quantitative Finance Articles, Python Finance Articles, C++ Finance Articles
Investment Idiocy
Investment research, Educational Material-ReSolve Blog
Flirting with Models | Research Library of Newfound Research
The Financial Hacker
Bayan Analytics
The Behavioural Quant
Black Arbs
Quantitative Trading, Statistical Arbitrage, Machine Learning and Binary Options

---------------------------------------------------------------------------------------------------------


Math Books:
https://www.wallstreetmojo.com/financial-mathematics-books/
https://www.cfajournal.org/financial-mathematics-books/

Before NYC:
- Algo Expert
- SD Expert
- Kaggle Expert
- FAANG
- Math Books w/ project setup
- Quantopian successful Alpha



Tradeoffs:
- Adderrel for algos
- Weed for SteveBrunton / 3Blue1Brown math & Finance Vids
- Mornings for Bachata & white papers
- All free time to QuantProj, Kaggle, TopCoder
- Work for money & quick problem solving
- Mind control your reactions to reality, filter attention-stimulus, &
    lead thought-process with efficient logic flows 
    => think of sets, iteratins, & abstractions

Eliminate:
- weed
- bad sleep
- Malverde (pointless streams)

Goals:
- Master algos during remaining freq time & pattern recall/application
- Good grasp on research via Kaggle
- Books => MLF & SystemDesign & Algos/LogicTheory
- Project design (arch,rxjs,d3,flask,amplify,aws)
- Stories for specific next role




By year end (53 days - Nov.09.2022):
- Perfecting: Algo/SD/UI
- Amzn
- Kaggle / Quantopian
- Math books


By year end (79 days - Oct.14.2022):
- 1000 probs + review
- Very well revised & actively studied SD
- Kaggle tutorials done & some projs
- Books done
- Proj. Infra well planned at this point & base setup
    - Optimized for system design UI automation setups & algo vis.
    - Optimized for reinforcement learning workflows
- NEXT: narrow on correct next oppts for future + house + consulting + QUANT**
=>
Algs(1000s) / SD (AWS) / Books(Math+Algo+logic) / ML(Labs+ Kaggle mid) / ProjectFoundation(Base planned for next 12 yrs)
=> Start Finance & Finance System Design Obsession + ReinfLearn & Stochastics => funnel to secure   investments
=> Spd learn strategic sets (hard+save+discovery) 
=> use & exploit (on actual work + downtime)
=> Read published papers





Important deadlines ( Started this list 10-06-2022 ):
- By year end:
    - Be well prepped in SystemDesign & Algos
    - Finish MLF book & deploy on side project
    - Finish up final setup of AppEngine vis., cloudform., tools, backend rdb, & python deployment
    - Finish reading trade/math books
- Starting next year:
    - Rewrite quant algos **
    - Perfect kaggle & comp programming (exploration for quant algos**)
    - House (+angs)
    - Faang
- Finish BST/Graph/Datastruct sets by October in python => buzz through hard sets => active review + read-books + quant-connect
- Finish AWS SD by Oct
- Stories: System Design the project you've worked on w/ details & perfection
    - Work projs
    - Tradebot transitional states => market clusters + interval analysis + portfolio
    - AppEngine for:
        => d3 & infra visualization for above project^ & seeing summarized version & different setups for strategies in 
           unfolding market events + reinforcement learning flow creator
        + data-transformers & state-strategies & KPI metrics
        + pipeline & event-triggerer to activate different processes/algorithms

- Next 3 months are waiting time for downpayment + mastering prep/stories for FAANG + some kaggle projects 
- Right before NYC get home & situate parents
- Then finish reading books + finish algo in NYC

- FAANG
- Houses
- Consultation Biz + Tech recruiter
- Bot before next crypto run prob in 2023
- Bot before next election Nov 2024
- Kaggle + TopCode Grandmaster + QuantConnect => Daily practice => exploration/exploitation
- Finish trade mathbooks & master them





------------------------------------------------------------
BrainFog notes:


- Master current -> step -> then next
- All in on reinforecment learning advancement
- All in on finance advancement
- All in on realestate
- All in on latindancing


- Set base at home & monitor parents + keep them & their health on check w/ tech
- Help Angs
- Remote + Promote Proj.
- Sharedeasy ppl psychology
- Salsa pro/master classes
------------------------------------------------------------
Now:
- AWS A-Z       -> since first stop is AMZN
- Active SD     -> for high ranking position
- LT zoning in now & perfecting techniques  -> for being hirable
- PythonFlask/ML/Proj   -> For type of work I want to pivot to
- Polishing strategic work exp & stories to get exact backendSystemDesign/Python pos
- Negotiation

Key in on:
- logical/thinking process & flow-momentum by reducing choices & narrowing scope
- techniques/key-ideas


o Roadmap (FAST):
:=>
Master SD/Algo/FinMath
->
AMZN
->
GOOG
->
Goldman + Standford PhD & FieldsMedal + Consult & Team
->
Expand


Quant Project:
- Configurable
- Observables
- Mapped to d3
- jsonSchemas
- docker for python & node server
- Use old ec2 & docker setup
- I technically also have a reddis & Kubernetes setup


End-goal:
- 2 homes per year @ 28 & at 29
- Algo/SystemDesign/ML/FinanceMath Expert by 30
- **** Infra setup by next election to capitalize
    - System Design & algos to scan markets, produce alpha, & execute is most important
    - Flow visualizer also important though
    - Good class & test suites also important to prevent wasting time
    - Learning algos also important







------------------------------------------------------------
Do I have the right plan?


stocks
=>
configurable rxjs streams within streams node( wraps a set of streams ) 
    & the graph is made of network of nodes
=>
inputs can be numbers that travel and propogate through streams
=>
as data passes through it online computes and runs diferent operations within nodes & slowly change state
=>
triggers events
=>
rebalances portfolio
(all happens based on probability sets & rules that update eachother in closed system while data 
    streams inflows)
=>
Project allows for configurable pipeing & filter / strategy configuration

Better start thinking about how I will build the event system
for generating alpha?
- do I need kafka?
- do I need seperate servers?
    - do I need seperate server processes like one node & one python, etc?
- can I use quantconnect open source project & run it in a server?
    - can I use the key to get market ddata?
    - if it goes to my server can I download data?
        - can I send unlimited notifications?
    - or can their keys only work on the servers they provision for the users?
    - and do they have a firewall around that server to limit http requests?
        - throttle?

Try System Designing a mathematical model of how algorithm will actualy work
    and what scopes it covers & what contexts (sets) is it wrapping to create
    a closed discrete system (can be fine as to almost represent continous,
    so could enough to approximate).
    System should be as simple as possible & configurable/extensible
        if needed
    Try to create a none hardcoded system, so that it has enough lever to 
        be able to adapt and adjust itself intelligently later***
    Create APIs and components that create a specific type of signal
        in a none-overlapping dimension as much as possible so all
        components do not disrupt eachother due to too much covariance
        aka duplicated components & more complicated & buggy system

If I could put it in a mathematical function how would I do it?? 
    Math => Finance => Physics
    - Everything is discrete, everything is limited & there is 
        a certain way to measure something or represent it via 
        operations, state, & output
        => stream events trigger different DFS/Backtrack possibilities

Creating simple logical flows that create effective complex systems
    that trigger events based on learned past or set of rules
    - so create an actual loop & system which would deterministically
        react to incoming events w/ portfolio in function + target
        => optimization problem** that uses probability/distributions
            to deal with noise & built in covariance
            - It may be more important to convert data to more confident & measureable data
                & also more specific dimensions that produce much more closed system
Discover what to mine info on (aka what environmental triggers to most optimally
    use by testing many hypethesis & using logic to get to robust favorable
    patterns that are not biased & temporaly siginificant enough to exploit a 
    benefit w/ low risk)

THIS IS WHY IT IS IMPORTANT TO THINK FROM THE TOP-BOTTOM WAY
    TO MORE EASILY UNDERSTAND PROBLEM WERE TRYING TO SOLVE
    - And TRIM OFF COMPLEXITY**
        - If we don't need many AWS serices & everything can be 
            done a simple while loop then THAT IS IT! TO MOST
            EFFICIENTLY HIT IDEA/GOAL & ITERATE FASTER TO EXTRACT
            ACTUAL VALUE YOU ARE TRYING TO MINE

System Design to figure out how to simplify things dramatically & save time/resources
    plus how to practice thought flow/process & logic theory skills on a closed system
    w/ discrete functional & non-functional requirements (INPUT/OUTPUT)

Kaggle to learn how to do research and manipulate data & make disoveries & the such
    & best practices

QunatConnect for doing the finace research & algos

TopCoder/CodeChef to learn how to convert ideas & math into code

Reading a lot of mathematical finance in order to zone in into the specific 
    operations & concepts I should be developing in to create better applications/systems/ideas

Study BST decision based algos for optimal choice logic
    as well as graph and dp for state and transition flows

numbers are sets. They are a metric that measure something
    big prime numbers are interesting bc they help make modulus 
    distribution more even among number streams
    eg) 2 prime num is small & has big set of multiples


Create an Alpha simulation w/ Rxjs & d3 that visualizes
    market groups as timesteps pass by & alpha triggers generated by system
    to see correct metrics are triggering events & to figure out how to
    optimize correct places


------------------------------------------------------------
Thinking Logically:
- Is sometimes about finding a subset of possibilities, even
    if they do not seem like they are part of the problem scope
    but finding an easy way of clearly eliminating those options
    & thus quickly moving in the correct direction & performing
    correct calculation
- This means having the ability to connect obtainable ideas/facts
    that may or may not seem relevant to quickly structure/restructure
    problem to a simpler approach/process
    - Bc getting entangled in COMPLEXITY IS BAD, REALLY BAD!
        MAKES THINGS UNNECESSARILY MORE COMPLICATED
        - So it is wise to make great decisions early on bc everything
            compounds on past decisions
- Less thoughts more action to get to more specific tasks that are doable
    - I find where I waste time is having difficulty making a decision
        or finding clarity about what I should be doing next
        - so thinking locically is very important for fast actionable
            decisions
- Analyze patterns that lead to complicated situations. 
    eg) emotinal intelligence in daily life is a relatable analogy
- Be as engaged as possible w/ work so that you can master it

--------------------------------------------------------------------------------
I feel lost in a stream of time w/ un-optimal direction

Work backwards from near optimal state:
- Market rider & optimal state machine
- Prep Amzn => **
- finish book - system design & AWS
- Review probs that matter & perfect the techniques now => then finish rest of probs or do 
    similar on ones where you are struggling
- Practice system design by designing rest of your projects optimally
- Build up project w/ system designs
- Absorb limitlessly financial mathematics + research with ML. Develop strats*



Sequence:
- Discipline is number one => to follow actions that lead to next step even if next step is less desirable then others
    It is still the next step & it is blocking => FAANG
- Logic thought process
- Master algos &  => python learning too
- Master system design => for efficiently architecting next systems
- Create systems => Reactivity
- Kaggle to learn research + libs like pandas/tools
- Quantopian => to get ideas
- Math to narrow in on ideas
- Everyday to keep exploring more ideas Kaggle/TopCoder/MathBooks => Perfect Trading System => Obsessive Iteration => Growth


Next:
- Finish amazon prep questions 30ish by Sunday + review them & all mods in Leetcode to perfection now & fast practice **
    - Streaming + Amortized runtimes + runtime/memory analysis
    - Graphs + Trees
    - DP + Decision/Action + Logic: Assumptions/Patterns/Flow
- Finsh A-Z AWS cookie cutter | SystemDesign Tutorial on educative on specific techs | review old SystemDesign Qs | Keep review SD Book
- Resume + Killer impact stories that Optimized business
- Start System design of project specifically w/ RXJS & service notifications in an app (Dom/reactivity/graph-algos/system-design)
    - Load-balancer nodes (that essentially are services) design
    - Change to Tree design ( not flat network  - like in frequence ) w/ dependency validation & graph algos
    - Add more AWS infra like sql, lambdas, & Kafka/SQS ( AWS System Design )
    - Perfect front + dom + system-design & reactivity architecture
- Smash the interview ( refine all you have very well now (speed/mem/best-tequniques) 
    + minimize all other distractons now including work/  friends/fam)
- Meantime start increasing research & Kaggle skills (low investment -> just for fun when tired)
- Scan math books + Quantopian just to get ideas (Have a killer plan ready starting 2023) + MLFin./ReinLearn./Cnsting./Remote+RealEst. ***

Goals:
- set urself up for going solo at age 30 (no job just work forself => realestate + algos + consulting)
    - before then make right investments to be able to do this
    - in 30s go full Math/Quant/SystemDesign/Research/Travel/Investment/TeamBuilding    








----------------------------------------------------------------------------------------

Sergio/Marichuy -> Tasks for them:
- Account# info send to her to get payments & a receipt to confirm **
- clean the garage well with detergent from amzn
- bathroom toiletPpr holder needs to be screwed back
- Put Fly trapper for room facing street back (it's in the garaage)
- Moving washer & dryer to side of the garage bc they have their own

- front entrance door has a gap.
- Getting a list of damages from Laura
- check if there are damages / inspect & take picture(Ser&Mar)
- Locks for closets? Leave keys for this

- shut sprinklers for ice in UT -> close it
- Both parties need to be out by 30th (Pedro & Laura from her place right now)
- Consider giving $50 dollar discount for self-management on their part
    OR just charge full amount & delegate ( Mom & Sergio/Marichuy )
