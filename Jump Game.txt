//First Try:
Total Runtime: 1823 ms
100% test cases passed.

public class Solution {
    /**
     * @param A: A list of integers
     * @return: The boolean answer
     */
    public boolean canJump(int[] A) {
        
        // Solution #1
        // int curr = 0, end = 0;
        // while(curr <= end){
        //     if(end >= A.length - 1) return true;
        //     if(curr + A[curr] > end) end = curr + A[curr];
        //     curr++;
        // }
        // return false;
        
        
        // Solution #2
        if(A == null || A.length == 0) return false;
        boolean[] dp = new boolean[A.length];
        dp[A.length - 1] = true;
        
        for(int i = A.length - 2; i >= 0; i--){
            int spaces = A[i], count = 0;
            while(count < spaces && i + count < A.length){
                if(dp[i + count + 1] == true){
                    dp[i] = true;
                    break;
                }
                count++;
            }
        }
        return dp[0];
    }
}

//[3,2,1,0,4]
//[2,3,1,1,4]
//[0,8,2,0,9]
//[4,6,9,5,9,3,0]
//[5,8,3,0,6,7,9,6,3,4,5,2,0,6,2,6,7,10,8,0]
